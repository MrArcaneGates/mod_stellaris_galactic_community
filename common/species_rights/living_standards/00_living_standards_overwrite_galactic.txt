# from = country
# this = species
#triggered_pop_modifier = {
#	potential = { is_pop_category = ruler }
#	pop_happiness = 0.15
#}

living_standard_shared_burden = {
	potential = {
		exists = from
		from = { has_valid_civic = civic_shared_burden }
	}

	triggered_pop_modifier = {
		potential = {
			NAND = {
				exists = owner
				owner = { has_deficit = consumer_goods }
			}
		}
		pop_cat_ruler_happiness = 0.05
		pop_cat_specialist_happiness = 0.05
		pop_cat_worker_happiness = 0.05
		pop_demotion_time_mult = -0.45
	}

	# Triggered so the auto-generated modifier is hidden.
	triggered_pop_modifier = {
		living_standard_trade_value_rulers_add = 2
		living_standard_trade_value_specialists_add = 2
		living_standard_trade_value_workers_add = 2
	}

	pop_modifier = {
		pop_category_rulers_consumer_goods_upkeep_add = @living_standard_luxuries_shared_burden
		pop_category_specialists_consumer_goods_upkeep_add = @living_standard_luxuries_shared_burden
		pop_category_workers_consumer_goods_upkeep_add = @living_standard_luxuries_shared_burden
		pop_cat_ruler_political_power = 6
		pop_cat_specialist_political_power = 6
		pop_cat_worker_political_power = 6
	}

	triggered_pop_modifier = {
		potential = {
			OR = {
				is_pop_category = ruler
				is_pop_category = specialist
				is_pop_category = worker
			}
		}
		unemployment_resources_unity_produces_add = 1
	}

	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = {
			fail_text = is_slaves_tooltip
			NOT = { has_citizenship_type = { country = from type = citizenship_slavery } }
		}
		custom_tooltip = {
			fail_text = is_servitude_tooltip
			NOT = { has_citizenship_type = { country = from type = citizenship_robot_servitude } }
		}
		custom_tooltip = {
			fail_text = is_purged_not_neutered
			if = {
				limit = {
					OR = {
						has_citizenship_type = { country = from type = citizenship_purge_machine }
						has_citizenship_type = { country = from type = citizenship_purge }
					}
				}
				has_purge_type = { country = from type = purge_neutering }
			}
		}
		custom_tooltip = {
			fail_text = SPECIES_MUST_NOT_BE_ASSIMILATING
			NOT = {
				has_citizenship_type = {
					type = citizenship_assimilation
					country = from
				}
			}
		}
	}

	ai_will_do = {
		factor = 1
	}
}

living_standard_worker_ownership = {
	potential = {
		exists = from
		from = { is_worker_coop_empire = yes }
	}

	# Triggered so the auto-generated modifier is hidden.
	triggered_pop_modifier = {
		potential = {
			always = yes
		}
		living_standard_trade_value_rulers_add = 2
		living_standard_trade_value_specialists_add = 2
		living_standard_trade_value_workers_add = 2
	}

	pop_modifier = {
		pop_category_rulers_consumer_goods_upkeep_add = @living_standard_luxuries_high
		pop_category_specialists_consumer_goods_upkeep_add = @living_standard_luxuries_high
		pop_category_workers_consumer_goods_upkeep_add = @living_standard_luxuries_high
		pop_cat_ruler_political_power = 6
		pop_cat_specialist_political_power = 6
		pop_cat_worker_political_power = 6
	}

	triggered_pop_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_mercantile_worker_coop_improved_ownership
			}
		}
		pop_cat_ruler_happiness = 0.05
		pop_cat_specialist_happiness = 0.05
		pop_cat_worker_happiness = 0.05
	}

	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = {
			fail_text = is_slaves_tooltip
			NOT = { has_citizenship_type = { country = from type = citizenship_slavery } }
		}
		custom_tooltip = {
			fail_text = is_servitude_tooltip
			NOR = { has_citizenship_type = { country = from type = citizenship_robot_servitude } }
		}
		custom_tooltip = {
			fail_text = is_purged_not_neutered
			if = {
				limit = {
					OR = {
						has_citizenship_type = { country = from type = citizenship_purge_machine }
						has_citizenship_type = { country = from type = citizenship_purge }
					}
				}
				has_purge_type = { country = from type = purge_neutering }
			}
		}
		custom_tooltip = {
			fail_text = SPECIES_MUST_NOT_BE_ASSIMILATING
			NOT = {
				has_citizenship_type = {
					type = citizenship_assimilation
					country = from
				}
			}
		}
	}

	ai_will_do = {
		factor = 1
	}
}